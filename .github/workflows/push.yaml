name: Push

on:
  pull_request:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup composite build caching
        uses: actions/cache@v4
        with:
          path: |
            build-logic/build
            build-logic/convention/build
          key: build-logic-${{ hashFiles('build-logic/*.kts', 'build-logic/convention/src/**', 'build-logic/convention/*.kts') }}

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Run local tests
        run: ./gradlew testDebug

      - name: Generate coverage output
        if: github.ref == 'refs/heads/main'
        run: |
          echo "COVERAGE=$(./gradlew -q test koverLineCoverage -Pkover koverXmlReport)" >> $GITHUB_ENV
      - name: Update dynamic badge gist
        uses: schneegans/dynamic-badges-action@v1.7.0
        if: github.ref == 'refs/heads/main'
        with:
          auth: ${{secrets.GIST_SECRET}}
          gistID: 0d51d51b793558923481088312d8c4cd
          filename: kotlin-inject-viewmodel-coverage-badge.json
          label: coverage
          message: ${{env.COVERAGE}}%
          valColorRange: ${{env.COVERAGE}}
          minColorRange: 0
          maxColorRange: 100

      - name: Assemble
        run: ./gradlew assemble --stacktrace
